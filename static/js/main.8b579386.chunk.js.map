{"version":3,"sources":["component/Course.js","component/Create.js","component/Edit.js","App.js","serviceWorker.js","index.js"],"names":["apiUrl","Course","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","courseList","_this2","axios","get","concat","then","response","console","log","statusText","setState","data","window","alert","catch","err","id","confirm","Axios","delete","location","_this3","react_default","a","createElement","className","map","x","key","name","fee","duration","react_router_dom","to","onClick","bind","Component","Create","createCourse","assertThisInitialized","onChangeId","onChangeName","onChangeFee","onChangeDuration","e","preventDefault","body","post","res","target","value","onSubmit","type","onChange","Edit","courseId","match","params","updateCourse","put","readOnly","App","data-toggle","data-target","react_router","exact","path","component","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b579386.chunk.js","sourcesContent":["import React , { Component} from 'react'\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nconst apiUrl = \"http://localhost:3000\";\r\n\r\n\r\nclass Course extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            courseList : []\r\n        };\r\n    }\r\n\r\n    componentDidMount (){\r\n            axios\r\n            .get(`${apiUrl}/course`)\r\n            .then(response => {\r\n                console.log(response);\r\n                if(response.statusText === 'OK'){\r\n                    this.setState({\r\n                        courseList : response.data\r\n                    });\r\n                }else {\r\n                    window.alert('Data not loaded');\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    delete(id){\r\n        console.log(id);\r\n        const status = window.confirm ( ' Are you sure, you want to delete id ' + id);\r\n        if(status) {\r\n            Axios   \r\n            .delete(`${apiUrl}/course/` + id)\r\n            .then('Successfully deleted the item..')\r\n            .catch(err => console.log(err));\r\n            window.location = \"http://localhost:3001\";\r\n        }else{\r\n            return null;\r\n        }     \r\n        \r\n    }\r\n    render(){\r\n        return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"jumbotron text-center\">\r\n                        <h1>Course details</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        \r\n        \r\n            <div className=\"row\">\r\n                {\r\n                    this.state.courseList.map (x => (\r\n                    <div className=\"col-md-4\" key={x.id}>\r\n                        <div className=\"panel panel-primary\">\r\n                            <div className=\"panel-heading\">\r\n                                <div className=\"panel-title\"> NAME : {x.name}\r\n                                </div>\r\n                                 </div>\r\n                        </div>\r\n                        <div className=\"panel-body\">\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">\r\n                                        Fee : <span className=\"pull-right\">{x.fee} </span>\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Duration : <span className=\"pull-right\">{x.duration} </span>\r\n                                    </li>\r\n                                    </ul>  \r\n                                    </div> \r\n                                    <div className=\"panel-footer\">\r\n                                        <Link className=\"btn btn-success\" to={\"/edit/\" + x.id }>Edit</Link>\r\n                                        <button onClick={this.delete.bind(this, x.id)}\r\n                                        \r\n                                         className=\"btn btn-warning\">Delete</button>\r\n                                    </div>\r\n                        </div>\r\n                ))}\r\n            \r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Course;","import React , { Component} from 'react'\r\nimport Axios from 'axios';\r\n\r\nconst apiUrl = 'http://localhost:3000';\r\n\r\n\r\nclass Create  extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id : 0,\r\n            name : '',\r\n            fee : 0,\r\n            duration : ''\r\n        };\r\n        this.createCourse = this.createCourse.bind(this);\r\n        this.onChangeId = this.onChangeId.bind(this);\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeFee = this.onChangeFee.bind(this);\r\n        this.onChangeDuration = this.onChangeDuration.bind(this);\r\n    }\r\n\r\n    createCourse(e){\r\n        e.preventDefault();\r\n     const body = {\r\n         id : this.state.id,\r\n         name : this.state.name,\r\n         fee : this.state.fee,\r\n         duration : this.state.duration\r\n     };\r\n      \r\n     console.log(body);\r\n     Axios.post(apiUrl + '/course', body)\r\n     .then(res => alert ( \" Successfully created new course\"))\r\n     .catch(err => console.log(err));\r\n     window.location = 'http://localhost:3001';\r\n\r\n    }\r\n\r\n    onChangeId (e) {\r\n        this.setState({\r\n            id : e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeName (e) {\r\n        this.setState({\r\n            name : e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeFee (e) {\r\n        this.setState({\r\n            fee : e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeDuration (e) {\r\n        this.setState({\r\n            duration : e.target.value\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"jumbotron text-center\">\r\n                        <h1> Create Course</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-offset-3 col-md-6 well\">\r\n                    <form onSubmit = {this.createCourse}>\r\n                        <div className=\"form-group\">\r\n                            <label> ID  </label>\r\n                            <input type=\"number\" \r\n                            name=\"id\"\r\n                             id=\"id\"\r\n                              className=\"form-control\"\r\n                               value={this.state.id}\r\n                               onChange={this.onChangeId}>\r\n\r\n                               </input>\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group\">\r\n                            <label> Name </label>\r\n                            <input type=\"text\"\r\n                             name=\"name\" \r\n                             id=\"name\"\r\n                              className=\"form-control\"\r\n                              value={this.state.name}\r\n                              onChange ={this.onChangeName}>\r\n\r\n                              </input>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label> FEE  </label>\r\n                            <input type=\"number\" \r\n                            name=\"fee\"\r\n                             id=\"fee\"\r\n                              className=\"form-control\" \r\n                              value={this.state.fee}\r\n                              onChange = {this.onChangeFee}\r\n                              ></input>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label> Duration </label>\r\n                            <input type=\"text\"\r\n                             name=\"duration\"\r\n                              id=\"duration\"\r\n                               className=\"form-control\"\r\n                                value={this.state.duration}\r\n                                onChange = {this.onChangeDuration}\r\n                                ></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"Submit\" className=\"btn btn-success\">Submit</button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Create;","import React , { Component} from 'react';\r\nimport Axios from 'axios';\r\n\r\n\r\nconst apiUrl = 'http://localhost:3000';\r\n\r\nclass Edit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            courseId : this.props.match.params.id,\r\n            id : 0,\r\n            name : '',\r\n            fee : 0 ,\r\n            duration : ''\r\n        };\r\n        this.updateCourse =this.updateCourse.bind(this);\r\n        this.onChangeId = this.onChangeId.bind(this);\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeFee = this.onChangeFee.bind(this);\r\n        this.onChangeDuration = this.onChangeDuration.bind(this);\r\n\r\n    }\r\n\r\n    updateCourse(e){\r\n        e.preventDefault();\r\n     const body = {\r\n         id : this.state.id,\r\n         name : this.state.name,\r\n         fee : this.state.fee,\r\n         duration : this.state.duration\r\n     };\r\n      \r\n     console.log(body);\r\n     Axios.put(apiUrl + '/course/' + this.state.courseId, body)\r\n     .then(res => alert ( \" Successfully updated course\"))\r\n     .catch(err => console.log(err));\r\n     window.location = 'http://localhost:3001';\r\n\r\n    }\r\n\r\n    onChangeId (e) {\r\n        this.setState({\r\n            id : e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeName (e) {\r\n        this.setState({\r\n            name : e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeFee (e) {\r\n        this.setState({\r\n            fee : e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeDuration (e) {\r\n        this.setState({\r\n            duration : e.target.value\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        Axios.get(`${apiUrl} /course/` + this.state.courseId)\r\n        .then(res => {\r\n            console.log(res.data);\r\n            this.setState({\r\n                id : res.data.id,\r\n                name : res.data.name,\r\n                fee : res.data.fee,\r\n                duration : res.data.duration\r\n\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    \r\n\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <div className=\"jumbotron text-center\">\r\n                    <h1> Edit Course</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-offset-3 col-md-6 well\">\r\n                <form onSubmit ={this.updateCourse}>\r\n                    <div className=\"form-group\">\r\n                        <label> ID  </label>\r\n                        <input type=\"number\" \r\n                        name=\"id\" \r\n                        id=\"id\"\r\n                         className=\"form-control\"\r\n                         readOnly\r\n                        value={this.state.id}\r\n                        onChange={this.onChangeId}></input>\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group\">\r\n                        <label> Name </label>\r\n                        <input type=\"text\"\r\n                         name=\"name\" \r\n                         id=\"name\"\r\n                          className=\"form-control\"\r\n                          value={this.state.name}\r\n                          onChange ={ this.onChangeName}></input>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label> FEE  </label>\r\n                        <input type=\"number\"\r\n                         name=\"fee\"\r\n                          id=\"fee\"\r\n                           className=\"form-control\"\r\n                           value = {this.state.fee}\r\n                           onChange = {this.onChangeFee}></input>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label> Duration </label>\r\n                        <input type=\"text\"\r\n                         name=\"duration\"\r\n                          id=\"duration\" \r\n                          className=\"form-control\"\r\n                          value={this.state.duration}\r\n                          onChange ={ this.onChangeDuration}></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button type=\"Submit\" className=\"btn btn-success\">Update</button>\r\n                        {/* <button type=\"Create\"className=\"btn btn-info\">Create</button> */}\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n        </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Edit;","import React,{Component } from 'react';\nimport { BrowserRouter as Router ,Switch , Route , Link } from 'react-router-dom';\nimport Course from './component/Course';\nimport Create from './component/Create';\nimport Edit from './component/Edit';\n\n\n\nclass App extends Component {\n  render(){\n    return(\n      <Router>\n        <div>\n            <nav className=\"navbar navbar-inverse\">\n              <div className=\"container-fluid\">\n                <div className=\"navbar-header\">\n                  <Link className=\"navbar-brand\" to='/'>\n                    Course CRUD\n                  </Link>\n                  <button className=\"navbar-toggle\"\n                          data-toggle=\"collapse\"\n                          data-target=\"#menu\"\n                          >\n                    <span className=\"icon-bar\"/>\n                    <span className=\"icon-bar\"/>\n                    <span className=\"icon-bar\"/>\n                  </button>\n                </div>\n                <div className=\"navbar-collapse collapse\" id=\"menu\">\n                  <ul className=\"nav navbar-nav\">\n                      <li>\n                      <Link to=\"/course\">Course</Link>\n                      </li>\n                      <li>\n                        <Link to=\"/create\">Create New</Link>\n                      </li>\n                  </ul>\n                </div>\n              </div>\n            </nav>\n          </div>\n          <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={ Course }/>\n             <Route  exact path=\"/course\" component = { Course } />\n             <Route exact path=\"/create\"  component = { Create } />\n             <Route exact path=\"/edit/:id\" component = { Edit } />\n          </Switch>\n          \n          </div>\n         </Router>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}